namespace = tribal_invasion

########################################################################################
# TRIBAL INVASION EVENTS
# R&D phase, not definitive
########################################################################################
country_event = {
	id = tribal_invasion.1
	title = "tribal_invasion.1.t"
	desc = "tribal_invasion.1.d"
	picture = rivercrossing
	is_triggered_only = yes
	
	
	immediate = {
		
		# 1) define how many people will rise to war
		# 2) move migration size (% of eligible warring people) into each province
		# 3) "rise" the moving population (both soldiers and civilians)
		# 4) calculate total people migrating, and add total amount into country level, add modifiers for land maintenance & cost
		# 5) fire event to declare war (if called back, harmful for owner, war exhaustion, etc)
		
		
		# initial cleanup, country-level
		set_variable = { which = ti_upper_total value = 0 } 
		set_variable = { which = ti_urban_total value = 0 } 
		set_variable = { which = ti_rural_total value = 0 } 
		
		every_owned_province = {
			limit = { culture_group = owner }
			## Export population into moving pop
			
			export_to_variable = { which = ti_upper_total value = base_tax }
			if = { 		limit = { base_tax = 2 }	subtract_variable = { ti_upper_total = 0.7 } }	# always stays 0.7, both if >2 or 1
			else_if = { limit = { base_tax = 1 } 	multiply_variable = { ti_upper_total = 0.3 } } 	# 0.7 stays
			else = { 								set_variable = { which = ti_upper_total value = 0 } }
			
			export_to_variable = { which = ti_urban_total value = base_production }
			if = { 		limit = { base_production = 2 }	subtract_variable = { ti_urban_total = 0.7 } }	# always stays 0.7, both if >2 or 1
			else_if = { limit = { base_production = 1 } 	multiply_variable = { ti_urban_total = 0.3 } } 	# 0.7 stays
			else = { 								set_variable = { which = ti_urban_total value = 0 } }
			
			export_to_variable = { which = ti_rural_total value = base_manpower }
			if = { 		limit = { base_manpower = 2 }	subtract_variable = { ti_rural_total = 0.7 } }	# always stays 0.7, both if >2 or 1
			else_if = { limit = { base_manpower = 1 } 	multiply_variable = { ti_rural_total = 0.3 } } 	# 0.7 stays
			else = { 								set_variable = { which = ti_rural_total value = 0 } }
			
			# send to country level
			owner = {
				change_variable = { which = ti_upper_total which = PREV }
				change_variable = { which = ti_urban_total which = PREV }
				change_variable = { which = ti_rural_total which = PREV }
			}
		}
		
		export_to_variable = { which = ti_available_manpower value = manpower }
		set_variable = { which = ti_base_manpower which = ti_available_manpower } # to use later
		if = { 		limit = { manpower_percentage = 1.0 } multiply_variable = { ti_available_manpower = 1.30 } }
		else_if = { limit = { manpower_percentage = 0.8 } multiply_variable = { ti_available_manpower = 1.15 } }
		multiply_variable = { ti_available_manpower = 4 }	# rural people contribute usually 750 per each 10k, so, x4 to 3k/10k
		
		set_variable = { 	which = ti_migration_unarmed which = ti_rural_total }
		change_variable = { which = ti_migration_unarmed which = ti_urban_total }
		change_variable = { which = ti_migration_unarmed which = ti_upper_total }
		multiply_variable = { ti_migration_unarmed = 10 }		# everything in thousands. Unarmed has total value
		
		subtract_variable = { which = ti_migration_unarmed which = ti_available_manpower }	# unarmed only
		
		# civilian units
		
		# One "cart" every 3 thousand. This ratio will be modified with tech and ideas (lower value, more migration size/force)
		set_variable = { which = ti_army_unarmed which = ti_migration_unarmed }
		divide_variable = { which = ti_army_unarmed value = 3 }
		
		
		# upper elite units
		set_variable = { which = ti_elite_army which = ti_upper_total } multiply_variable = { ti_elite_army = 10 }
		subtract_variable = { which = ti_base_manpower which = ti_elite_army }	# manpower for elites is "reserved" and not deleted
		#subtract_variable = { which = ti_available_manpower which = ti_elite_army }	# same here, there would be duplicity
		
	}
	
	option = {
		name = "tribal_invasion.1.a"
		ai_chance = {
			factor = 100
		}
		every_owned_province = {
			limit = { culture_group = owner }
		
			# the variables are stored in the province, and will be used to "remove" the population once the invasion is over
			add_province_modifier = { name = ti_invader_origin duration = -1 }	# displays information & reduces economic value of province
			
		}
		
		# recruit all migrating force in the capital
		
		capital_scope = {
			
			# elite
			
			# elite troops are special, in that Banners can't be recruited. So they will need to be recruited by the player; I add here several modifiers adding to the total amount of banners in the capital, to be recruited fast. Available manpower will be deducted from those, to leave enough space for it
			set_variable = { which = ti_elite_army which = ROOT }
			if = { limit = { check_variable = { ti_elite_army = 32 } } add_province_modifier = { name = ti_elite_troops_32 duration = -1 } }
			if = { limit = { check_variable = { ti_elite_army = 16 } } add_province_modifier = { name = ti_elite_troops_16 duration = -1 } }
			if = { limit = { check_variable = { ti_elite_army = 8 } } add_province_modifier = { name = ti_elite_troops_8 duration = -1 } }
			if = { limit = { check_variable = { ti_elite_army = 4 } } add_province_modifier = { name = ti_elite_troops_4 duration = -1 } }
			if = { limit = { check_variable = { ti_elite_army = 2 } } add_province_modifier = { name = ti_elite_troops_2 duration = -1 } }
			if = { limit = { check_variable = { ti_elite_army = 1 } } add_province_modifier = { name = ti_elite_troops_1 duration = -1 } }
			set_variable = { which = ti_elite_army value = 0 }
			
			# battle-worthy (available manpower)
			set_variable = { which = ti_available_manpower which = ROOT }
			while = {
				limit = { check_variable = { ti_available_manpower = 1 } }
				subtract_variable = { ti_available_manpower = 1 }
				random_list = {
					60 = { infantry = ROOT }
					10 = { cavalry = ROOT }
					30 = { artillery = ROOT }
				}
			}
			set_variable = { which = ti_available_manpower value = 0 }
			set_variable = { which = ti_migration_unarmed which = ROOT }
			
			
			
			
		}
		
		# Calculate new landforce limit
		set_variable = { which = ti_landlimit which = ti_available_manpower }
		change_variable = { which = ti_landlimit which = ti_elite_army }
		change_variable = { which = ti_landlimit which = ti_army_unarmed }
		
		
		while = {
			limit = { check_variable = { ti_army_unarmed = 1 } }
			subtract_variable = { ti_army_unarmed = 1 }
			random_owned_province = {
				add_unit_construction = {
					type = 0_unarmed_migrants
					amount = 1
					speed = 0.02
					cost = 0
				}
			}
		}
			
		if = { 
			limit = { check_variable = { ti_landlimit = 128 } } 
			subtract_variable = { ti_landlimit = 128 } add_country_modifier = { name = ti_landlimit_128 duration = -1 } 
		}
		if = { 
			limit = { check_variable = { ti_landlimit = 64 } } 
			subtract_variable = { ti_landlimit = 64 } add_country_modifier = { name = ti_landlimit_64 duration = -1 } 
		}
		if = { 
			limit = { check_variable = { ti_landlimit = 32 } } 
			subtract_variable = { ti_landlimit = 32 } add_country_modifier = { name = ti_landlimit_32 duration = -1 } 
		}
		if = { 
			limit = { check_variable = { ti_landlimit = 16 } } 
			subtract_variable = { ti_landlimit = 16 } add_country_modifier = { name = ti_landlimit_16 duration = -1 } 
		}
		if = { 
			limit = { check_variable = { ti_landlimit = 8 } } 
			subtract_variable = { ti_landlimit = 8 } add_country_modifier = { name = ti_landlimit_8 duration = -1 } 
		}
		if = { 
			limit = { check_variable = { ti_landlimit = 4 } } 
			subtract_variable = { ti_landlimit = 4 } add_country_modifier = { name = ti_landlimit_4 duration = -1 } 
		}
		if = { 
			limit = { check_variable = { ti_landlimit = 2 } } 
			subtract_variable = { ti_landlimit = 2 } add_country_modifier = { name = ti_landlimit_2 duration = -1 } 
		}
		if = { 
			limit = { check_variable = { ti_landlimit = 1 } } 
			subtract_variable = { ti_landlimit = 1 } add_country_modifier = { name = ti_landlimit_1 duration = -1 } 
		}
		
		# add more landforce limit. This will scare the shit out of neighbours
		
		#country_event = { id = tribal_invasion.2 }
		add_country_modifier = { name = ti_free_maint duration = 730 }	# two years until morale erodes and people rethink
	}
	
}

country_event = {
	id = tribal_invasion.2
	title = "tribal_invasion.2.t"
	desc = "tribal_invasion.2.d"
	picture = rivercrossing
	is_triggered_only = yes
	
	
	immediate = {
		
		# 1) search which countries are around, within distance (mix of tech ++ and migration size -- )
		# 2) assign up to 10 alternatives, and "target regions" that are to be conquered + province flag there
		# 3) declare war on the target country, and set each province in the area with that province flag
		#		I think I can do a scripted effect adding "invader=ROOT" -> province_flag invasion_target_$invader$
		# 4) ALL provinces that are not the capital, are lost. Both normal provinces and capital lose all buildings and are added as "travelling money" (not cash itself), and is unpacked once arriving in the new provinces. Capital loses buildings and only gets a modifier with fort_level +2 (so, total 3) and defensiveness +100%, as there is no-one around and the siege itself has no effect. 
		# 5) war starts
		
		# 6) if a war is finished by annexing their last province, the invaders stay in the province they have occupied so far, and stay there as a modifier. They can be integrated, paid to leave, attacked, enslaved,... neighboring countries may want to call them back, merge all warriors again, and start a new invasion
		
		
		# join_all_offensive_wars_of  	cool, I don't know if it works
		
		# 1 to 5
		random_province = {
			
		
		}
		
		
		
		
		
	}
	
	option = {
		name = "tribal_invasion.1.a"
		ai_chance = {
			factor = 100
		}
		
	}
	
}

country_event = {
	id = tribal_invasion.3
	title = "tribal_invasion.3.t"
	desc = "tribal_invasion.3.d"
	picture = rivercrossing
	is_triggered_only = yes
	
	
	immediate = {
		
		# an on_action is created if a province is occupied and the attacker has contry flag of invader. Once occupied, adds a province_modifier which lasts for X days (one year?) 
		# the defender gets this event, saying "the invaders have already occupied these provinces for so long. Shall we negotiate with them?
		#	A) ok, accept to lose these provinces... momentarily -> transfer them, fire event 4, lose core but add claim and CB for 10 years
		#	B) no, don't stop them. 			Add another year to the timer. After that, they're completely lost
		#	C) offer them another area (fire event 5, choose which area / region), redirects to event 4
		
		
	}
	
	option = {
		name = "tribal_invasion.3.a"
		ai_chance = {
			factor = 100
		}
		
	}
	
}

country_event = {
	id = tribal_invasion.4
	title = "tribal_invasion.4.t"
	desc = "tribal_invasion.4.d"
	picture = rivercrossing
	is_triggered_only = yes
	
	
	immediate = {
		
		# coming from event 3 (defener accept to lose provinces) or event 4 (another province/area is offered)
		# "The defender is accepting to negotiate. Do you accept?"
		# 	if yes, Fires event 6, also happens if the war is won and provinces are gained
		# 	
		
	}
	
	option = {
		name = "tribal_invasion.4.a"
		ai_chance = {
			factor = 100
		}
		
	}
	
}

country_event = {
	id = tribal_invasion.5
	title = "tribal_invasion.5.t"
	desc = "tribal_invasion.5.d"
	picture = rivercrossing
	is_triggered_only = yes
	
	
	immediate = {
		
		# Choose which area give to them. Sets which is the target province asked by the barbarians, and searches for neighboring (within distance X) areas that can be offered to them. Same code as event 3
		
	}
	
	option = {
		name = "tribal_invasion.4.a"
		ai_chance = {
			factor = 100
		}
		
	}
	
}

country_event = {
	id = tribal_invasion.6
	title = "tribal_invasion.6.t"
	desc = "tribal_invasion.6.d"
	picture = rivercrossing
	is_triggered_only = yes
	
	
	immediate = {
		# Lose the old capital
		
		# Decide what to do with the newly conquered provinces. 
		#	A) expel the original population (50% leave)
		#	B) enslave some (25% enslave, 25% leave)
		#	C) enslave many (50% enslave, 25% leave)
		# 	D) exterminate (33% enslave, 33% leave, 33% killed)
		# 	E) peacefully coexist (probably won't change cultures, but more development) (25% leaving, nothing else)
		# then fires the event to redistribute people. 
		
	}
	
	option = {
		name = "tribal_invasion.4.a"
		ai_chance = {
			factor = 100
		}
		
	}
	
}
country_event = {
	id = tribal_invasion.7
	title = "tribal_invasion.7.t"
	desc = "tribal_invasion.7.d"
	picture = rivercrossing
	is_triggered_only = yes
	
	
	immediate = {
		# calculations to settle the moving tribe. Will conver all the "warriors" (non-professional soldiers) and civilians, and distributes them around the newly gained provinces. 
		
		# while, random province, subtract country variable and add province variable
		# then, every_owned_province,
		
	}
	
	option = {
		name = "tribal_invasion.4.a"
		ai_chance = {
			factor = 100
		}
		
	}
	
}